{"version":3,"file":"ggbutils.min.js","sources":["../src/ggbutils.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * GGB utils for the qtype_geogebra plugin javascript.\n *\n * @module     qtype_geogebra/ggbutils\n * @copyright  2022 ISB Bayern\n * @author     Philipp Memmel\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport const disableSubmitButtons = (parentNode) => {\n    // We need to make every button currently present and newly created in the GGB applet behave like\n    // a standard button to avoid submitting the question form when being clicked.\n    const buttonAddedObserver = new MutationObserver(mutations =>\n        mutations\n            .filter(mutation => mutation.type === 'childList' && mutation.addedNodes && mutation.addedNodes.length > 0)\n            .forEach(mutation => {\n                // We need to find all child elements of type button, also deeper in the tree.\n                const treeWalker = document.createTreeWalker(mutation.target);\n                const nodes = [];\n                let currentNode = treeWalker.currentNode;\n                while (currentNode) {\n                    nodes.push(currentNode);\n                    currentNode = treeWalker.nextNode();\n                }\n                nodes.filter(node => node.nodeName === 'BUTTON').forEach(node => {\n                    // If we find a button whose type is 'submit' we set its type to 'button' to avoid it being able to\n                    // trigger a submission of the moodle question form.\n                    if (node.type === 'submit') {\n                        node.type = 'button';\n                    }\n                });\n            })\n    );\n    const observerParameters = {attributes: false, childList: true, characterData: false, subtree: true};\n    buttonAddedObserver.observe(parentNode, observerParameters);\n};\n"],"names":["parentNode","MutationObserver","mutations","filter","mutation","type","addedNodes","length","forEach","treeWalker","document","createTreeWalker","target","nodes","currentNode","push","nextNode","node","nodeName","observe","attributes","childList","characterData","subtree"],"mappings":"4LAwBoC,SAACA,YAGL,IAAIC,kBAAiB,SAAAC,kBAC7CA,UACKC,QAAO,SAAAC,gBAA8B,cAAlBA,SAASC,MAAwBD,SAASE,YAAcF,SAASE,WAAWC,OAAS,KACxGC,SAAQ,SAAAJ,kBAECK,WAAaC,SAASC,iBAAiBP,SAASQ,QAChDC,MAAQ,GACVC,YAAcL,WAAWK,YACtBA,aACHD,MAAME,KAAKD,aACXA,YAAcL,WAAWO,WAE7BH,MAAMV,QAAO,SAAAc,YAA0B,WAAlBA,KAAKC,YAAuBV,SAAQ,SAAAS,MAGnC,WAAdA,KAAKZ,OACLY,KAAKZ,KAAO,mBAMZc,QAAQnB,WADD,CAACoB,YAAY,EAAOC,WAAW,EAAMC,eAAe,EAAOC,SAAS"}