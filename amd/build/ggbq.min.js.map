{"version":3,"sources":["../src/ggbq.js"],"names":["define","$","GGBApplet","GGBcodebase","M","cfg","wwwroot","scalingContainers","resizeTimeout","resizeScalingContainer","clearTimeout","setTimeout","Object","values","forEach","containerClass","scalingContainer","document","getElementsByClassName","formulationDivStyle","window","getComputedStyle","querySelector","parentElement","style","width","parseInt","paddingLeft","paddingRight","b64input","ggbBase64","xmlinput","ggbxml","currentvals","answerinput","responsevars","exerciseresultinput","qdiv","ggbDataset","init","appletParametersID","GGBQ","getElementById","dataset","slot","scalingcontainerclass","ggbAppletOnLoad","ggbAppletId","onkeydown","checkEnter","id","substring","ggbApplet","curvals","JSON","parse","label","setValue","removeEventListener","addEventListener","val","getBase64","getXML","visibility","responsestring","responsevar","isDefined","getValue","parameters","forcedimensions","scaleContainerClass","autoHeight","height","overflowX","overflowY","ggbDatasetVars","vars","language","lang","moodle","material_id","views","applet1","html5NoWebSimple","setHTML5Codebase","inject","div","on","getBase64andCheck","e","event","txtArea","test","target","srcElement","tagName","keyCode","which","charCode","i","length","entries","key","value","evalCommand","j"],"mappings":"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","sourcesContent":["/**\n * Javascript Controller to embed GGBApplet\n *\n * STUDENT VIEW\n *\n * This class provides all the functionality for the new assign module.\n *\n * @author         Christoph Stadlbauer <christoph.stadlbauer@geogebra.org>\n * @copyright  (c) International GeoGebra Institute 2018\n * @license        http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'qtype_geogebra/deployggb'], function ($, GGBApplet) {\n    /**\n     * Created by Christoph on 25.08.19.\n     * Modified for use of local Geogebra by Martin Putzlocher on 30.01.22.\n     */\n\n    /**\n     * GGB Codebase: necessary for loading GGB-Bundle locally.\n     * @type {string}\n     */\n    const GGBcodebase = M.cfg.wwwroot +\n        '/question/type/geogebra/js/geogebra-math-apps-bundle/GeoGebra/HTML5/5.0/web3d/';\n\n    const scalingContainers = {};\n    let resizeTimeout;\n    /**\n     * Resizes the ggb scaling containers to make the ggb applet scale properly to fit into its container.\n     */\n    const resizeScalingContainer = () => {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(\n            () => Object.values(scalingContainers).forEach((containerClass) => {\n                    // We need to use getElementsByClassName because colons are not allowed for jquery and Vanilla JS querySelector.\n                    const scalingContainer = document.getElementsByClassName(containerClass)[0];\n                    // We retrieve the formulation div container, because this gives us the correct width to adapt\n                    // the scaling container to.\n                    const formulationDivStyle = window.getComputedStyle(\n                        scalingContainer.querySelector('.qtext').parentElement.parentElement);\n                    scalingContainer.style.width = parseInt(formulationDivStyle.width)\n                        - parseInt(formulationDivStyle.paddingLeft) - parseInt(formulationDivStyle.paddingRight) + 'px';\n                }), 250);\n    };\n\n    return {\n        b64input: [],\n        ggbBase64: [],\n        xmlinput: [],\n        ggbxml: [],\n        currentvals: [],\n        answerinput: [],\n        responsevars: [],\n        exerciseresultinput: [],\n        qdiv: [],\n        //parameters: {},\n        ggbDataset: [],\n        //applet1,\n\n        init: function (appletParametersID) {\n            window.GGBQ = this;\n            var ggbDataset = document.getElementById(appletParametersID).dataset;\n            var slot = ggbDataset.slot;\n            // Add current scaling container to the object store for being able to access it later on.\n            scalingContainers[slot] = ggbDataset.scalingcontainerclass;\n\n            window.ggbAppletOnLoad = function (ggbAppletId) {\n                if (ggbAppletId != -1) {\n                    document.querySelector('article').onkeydown = this.checkEnter;\n                    var id = ggbAppletId.substring(9);\n                    var ggbApplet = window[ggbAppletId];\n                    var curvals = JSON.parse(window.GGBQ.currentvals[id]);\n                    for (var label in curvals) {\n                        ggbApplet.setValue(label, curvals[label]);\n                    }\n\n                    // Set the initial size of the scaling containers so GeoGebra applet scale a first time correctly after loading.\n                    resizeScalingContainer();\n                    // Unregister old event listeners in case we have multiple GeoGebra questions on one page.\n                    // We only need one for the whole page.\n                    window.removeEventListener('resize', resizeScalingContainer);\n                    window.addEventListener('resize', resizeScalingContainer);\n\n                    window.GGBQ.b64input[id].val(ggbApplet.getBase64());\n                    window.GGBQ.xmlinput[id].val(ggbApplet.getXML());\n\n                    window.GGBQ.qdiv[id].style.visibility = 'visible';\n                    if (window.GGBQ.answerinput[id].val() == '') {\n                        var responsestring = '';\n                        window.GGBQ.responsevars[id].forEach(function (responsevar) {\n                            if (ggbApplet.isDefined(responsevar)) {\n                                responsestring += ggbApplet.getValue(responsevar);\n                            } else {\n                                responsestring += 0;\n                            }\n                        });\n                        window.GGBQ.answerinput[id].val(responsestring);\n                    }\n                }\n            };\n\n            // jquery doesn't handle the colon : but later we expect a jquery optject, so ...\n            this.b64input[slot] = $(document.getElementById(ggbDataset.b64input));\n            this.ggbBase64[slot] = this.b64input[slot].val();\n\n            this.xmlinput[slot] = $(document.getElementById(ggbDataset.xmlinput));\n            this.ggbxml[slot] = this.xmlinput[slot].val();\n            this.qdiv[slot] = $(\"#q\" + (slot) + \" .qtext\")[0];\n\n            var parameters = JSON.parse(ggbDataset.parameters);\n            if (this.ggbBase64[slot] != '') {\n                parameters.ggbBase64 = this.ggbBase64[slot];\n            }\n\n            // Check if width and height have been manually set. The default would be \"no\", so we use the scaling container feature.\n            if (!ggbDataset.forcedimensions || ggbDataset.forcedimensions === '0') {\n                parameters.scaleContainerClass = scalingContainers[slot];\n                parameters.autoHeight = true;\n            } else {\n                // Width and height are specified in this case, so we use the given fixed width and height settings\n                // of the plugin instance. Form validation of the settings asserts that both width and height are being set.\n                parameters.width = ggbDataset.width;\n                parameters.height = ggbDataset.height;\n                // We need to use getElementsByClassName because colons are not allowed for jquery and Vanilla JS querySelector.\n                const scalingContainer = document.getElementsByClassName(scalingContainers[slot])[0];\n                // We should always find this container, just check to be extra safe.\n                if (scalingContainer) {\n                    // Width of the scaling container is being set after the applet has been loaded. So no need to specify it here.\n                    scalingContainer.style.overflowX = 'auto';\n                    scalingContainer.style.overflowY = 'hidden';\n                }\n            }\n\n            // parameters.currentvals = JSON.parse(ggbDataset.vars);\n            this.ggbDatasetVars = JSON.parse(ggbDataset.vars);\n            parameters.language = ggbDataset.lang;\n            parameters.moodle = \"takingQuiz\";\n            delete parameters.material_id;\n\n            parameters.id = 'ggbApplet' + slot;\n\n            var views = JSON.parse(ggbDataset.views);\n\n            var applet1 = new GGBApplet(parameters, views, ggbDataset.html5NoWebSimple);\n            // applet1.setHTML5Codebase(\"https://cdn.geogebra.org/apps/5.0.541.0/web3d\");\n            applet1.setHTML5Codebase(GGBcodebase);\n            applet1.inject(ggbDataset.div, \"preferHTML5\");\n\n            $('#responseform').on('submit', this.getBase64andCheck);\n\n            $(document.getElementById(ggbDataset.div)).on('mouseleave', this.getBase64andCheck);\n\n            this.currentvals[slot] = ggbDataset.vars;\n            this.answerinput[slot] = $(document.getElementById(ggbDataset.answerinput));\n            this.exerciseresultinput[slot] = $(document.getElementById(ggbDataset.exerciseresultinput));\n            this.responsevars[slot] = JSON.parse(ggbDataset.responsevars);\n        },\n        checkEnter: function(e) {\n            e = e || event;\n            var txtArea = /textarea/i.test((e.target || e.srcElement).tagName);\n            return txtArea || (e.keyCode || e.which || e.charCode || 0) !== 13;\n        },\n\n\n        getBase64andCheck: function() {\n            for (var i = 0; i < window.GGBQ.answerinput.length; i++) {\n                var ggbApplet = window['ggbApplet' + i];\n                if (typeof ggbApplet !== \"undefined\") {\n                    window.GGBQ.b64input[i].val(ggbApplet.getBase64());\n                    window.GGBQ.xmlinput[i].val(ggbApplet.getXML());\n\n                    // Workaround, to set all randomized variables.\n                    for (const [key, value] of Object.entries(window.GGBQ.ggbDatasetVars)) {\n                        ggbApplet.evalCommand(`${key}=${value}`);\n                    }\n\n                    var responsestring = '';\n                    for (var j = 0; j < window.GGBQ.responsevars[i].length; j++) {\n                        if (ggbApplet.isDefined(window.GGBQ.responsevars[i][j])) {\n                            responsestring += ggbApplet.getValue(window.GGBQ.responsevars[i][j]);\n                        } else {\n                            responsestring += 0;\n                        }\n                    }\n\n                    window.GGBQ.answerinput[i].val(responsestring);\n                }\n            }\n        },\n\n    };\n});\n"],"file":"ggbq.min.js"}